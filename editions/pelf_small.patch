--- ../pelf
+++ ./pelf_small
@@ -213,14 +213,14 @@
 fi
 
 # Create a tar archive of the executable, libraries and additional files
-if ! tar -C "$tmp_dir" -czf "$outer_tmp_dir/archive.tar.gz" .; then
-    echo "Compression failed" >&2
+if ! tar -C "$tmp_dir" -cf - . | gzip -9 > "$outer_tmp_dir/archive.tar.gz"; then
+    echo "Compression failed. Do you have gzip?" >&2
     exit 1
 fi
 
 # Create a self-extracting script
 HOST_INFO="$(uname -mrspv)"
-VERSION="1.7_vanilla" # replace "vanilla" with whatever your custom edition is!
+VERSION="1.7_small" # replace "vanilla" with whatever your custom edition is!
 
 # Generate the loader script with conditional LD_LIBRARY_PATH replacements
 LOADER_SCRIPT=$(sed -e "s|__ENTRY_POINT__|$basename_src|g" \
@@ -228,10 +228,12 @@
                         -e "s|__PELF_HOST__|$HOST_INFO|g" <<'END_OF_LOADER_SCRIPT'
 #!/bin/sh
 
-# This file was automatically generated by PELF. Find out more about it here: https://github.com/xplshn/pelf
-# Please DO NOT EDIT this file, unless you are testing for changes/fixes. If you found the need to modify
-# PELF's behavior, submit a PR of your "PELF EDITION" if you think it is appropiate.                    -
+# This file was automatically generated by PELF_small. Find out more about it here: https://github.com/xplshn/pelf
+# Please DO NOT EDIT this file, use `pelf_extract` and then create another bundle in case you need to modify something here.
+# Any attempts to modify a .small bundle will fail because of the binary data contained within it.
+# - If you found the need to modify the loader's behavior, submit a PR of your "PELF EDITION" if you think it is appropiate.
 
+
 # Get the binary's name
 [ -n "$EXE_NAME" ] || EXE_NAME="__ENTRY_POINT__"
 rEXE_NAME="$(echo "$EXE_NAME" | tr -dc '[:alnum:]_' | tr '[:upper:]' '[:lower:]')"
@@ -285,8 +287,8 @@
 
         # Construct the variable name by appending _bindir to $rEXENAME
         var_name="${rEXE_NAME}_bindir"
-        # Decode the base64-encoded archive and extract it
-        mkdir -p "$TMPDIR" && tail -n +$ARCHIVE_MARKER "$0" | base64 -d | tar -xzf - -C "$TMPDIR" >/dev/null 2>&1 || {
+        # Find the archive and extract it
+        mkdir -p "$TMPDIR" && tail -n +$ARCHIVE_MARKER "$0" | tar -xzf - -C "$TMPDIR" >/dev/null 2>&1 || {
             # Use eval to check if the constructed variable name exists and is not empty
             echo "Extraction failed" >&2
             eval "var_value=\"\${$var_name}\""
@@ -464,8 +466,8 @@
 )
 
 echo "$LOADER_SCRIPT" > "$dst"
-# Append the base64-encoded archive to the self-extracting script
-base64 <"$outer_tmp_dir/archive.tar.gz" >> "$dst" || exit 1
+# Append the archive to the self-extracting script
+cat "$outer_tmp_dir/archive.tar.gz" >> "$dst" || exit 1
 
 # Make the self-extracting script executable
 chmod +x "$dst" || exit 1
