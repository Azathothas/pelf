#!/bin/sh

MAINTAINER="$1"
NAME="$2"
PKG_ADD="$3"
ENTRYPOINT="$4"

DATE="$(date +%Y_%m_%d)"

APPBUNDLE_ID="$NAME-$DATE-$MAINTAINER"
APPDIR="$NAME-$DATE.AppDir"
OUTPUT_TO="$NAME-$DATE.dwfs.AppBundle"
COMPRESSION_OPTS="--compress-level=9 --categorize=pcmaudio" #COMPRESSION_OPTS="--max-lookback-blocks=5 --categorize=pcmaudio --compression pcmaudio/waveform::flac:level=8"

[ "$VERBOSE" = "1" ] && TAR_OPTS="xzfv" || TAR_OPTS="xzf"

mkdir -p "$APPDIR/usr/bin" "$APPDIR/rootfs"
# shellcheck disable=SC2086
wget -qO- https://pub.ajam.dev/utils/alpine-mini-x86_64/rootfs.tar.gz | tar $TAR_OPTS - -C "$APPDIR/rootfs" || {
    echo "Failed to download or extract musl toolchain"
    exit 1
}
wget -qO "$APPDIR/usr/bin/bwrap" "https://bin.ajam.dev/$(uname -m)/bwrap" || {
    echo "Unable to install bwrap to $APPDIR/usr/bin/bwrap"
    exit 1
} && chmod +x "$APPDIR/usr/bin/bwrap"

 Download the AppRun file and make it executable
wget -qO "$APPDIR/AppRun" https://raw.githubusercontent.com/xplshn/pelf/refs/heads/pelf-ng/assets/AppRun.rootfs-based || {
    echo "Failed to download AppRun.rootfs-based"
    exit 1
} && chmod +x "$APPDIR/AppRun" || {
    echo "Failed to make AppRun executable"
    exit 1
} && echo "$ENTRYPOINT" > "$APPDIR/rootfs/entrypoint" && chmod +x "$APPDIR/rootfs/entrypoint" && \
"$APPDIR/AppRun" --Xbwrap --uid "0" --gid "0" -- apk -X "https://dl-cdn.alpinelinux.org/alpine/latest-stable/main" -U --allow-untrusted --initdb add "$PKG_ADD"

# Check if the entrypoint is a .desktop file, and if so, copy to the root of the $APPDIR
if [ "${ENTRYPOINT##*.}" = "desktop" ]; then
    if [ -f "$APPDIR/rootfs/usr/share/applications/$ENTRYPOINT" ]; then
        # Link the .desktop file to the root of $APPDIR
        ln -Tf "$APPDIR/rootfs/usr/share/applications/$ENTRYPOINT" "$APPDIR/$ENTRYPOINT" || {
            echo "Failed to link $APPDIR/rootfs/usr/share/applications/$ENTRYPOINT to $APPDIR/$ENTRYPOINT"
            exit 1
        }

        # Extract the icon name from the .desktop file
        ICON_NAME="$(awk -F"=" '/Icon/ {print $2; exit}' "$APPDIR/rootfs/usr/share/applications/$ENTRYPOINT" 2>/dev/null)"

        # Extract the Exec command from the .desktop file and write it to the entrypoint
        ENTRYPOINT=$(awk -F"=| " '/Exec=/ {print $2; exit}' "$APPDIR/rootfs/usr/share/applications/$ENTRYPOINT" 2>/dev/null)
        # Write the extracted command to the entrypoint file and make it executable
        echo "$ENTRYPOINT" > "$APPDIR/rootfs/entrypoint" && chmod +x "$APPDIR/rootfs/entrypoint"

        if [ -n "$ICON_NAME" ]; then
            # Find and copy the icon to $APPDIR/.DirIcon
            ICON_PATH=$(find "$APPDIR/rootfs/usr/share/icons" -type f -name "$ICON_NAME.*" -print -quit 2>/dev/null)

            if [ -n "$ICON_PATH" ]; then
                cp "$ICON_PATH" "$APPDIR/.DirIcon" || {
                    echo "Failed to copy the icon $ICON_PATH to $APPDIR/.DirIcon"
                    exit 1
                }
                echo "Icon $ICON_NAME copied to $APPDIR/.DirIcon"
            else
                echo "Icon $ICON_NAME not found in $APPDIR/rootfs/usr/share/icons/"
                exit 1
            fi
        else
            echo "No Icon entry found in $APPDIR/rootfs/usr/share/applications/$ENTRYPOINT"
            exit 1
        fi
    else
        echo "$ENTRYPOINT does not exist in $APPDIR/rootfs/usr/share/applications/"
        exit 1
    fi
fi

wget -qO- "https://raw.githubusercontent.com/xplshn/pelf/refs/heads/pelf-ng/pelf-dwfs" | sh -s -- --add-appdir "$APPDIR" "$APPBUNDLE_ID" --output-to "$OUTPUT_TO" --embed-static-tools --compression "$COMPRESSION_OPTS"
